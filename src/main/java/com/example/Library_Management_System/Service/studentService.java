package com.example.Library_Management_System.Service;

import com.example.Library_Management_System.DTO.StudentMobileNoUpdateDTO;
import com.example.Library_Management_System.Enum.CardStatus;
import com.example.Library_Management_System.Models.Card;
import com.example.Library_Management_System.Models.Students;
import com.example.Library_Management_System.Repository.studentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class studentService {

    @Autowired
    studentRepository studentRepository;
    public String addStudent(Students student){
        // student from the postman is already the basic attirubutes set.


        //Card should be autogenerated when add student funtion is called.
        Card card = new Card();
        card.setCardStatus(CardStatus.ACTIVATED);// this type we  can set enum attribute  card status been set
        card.setStudent(student); // foregin key attriubte


        // now set student attributes
        student.setCard(card);

        // if there was a unidirection mapping we had to save both of them
        // but we in bidirectional we have to save only parent child automatically save

        studentRepository.save(student); // saving in database

        return  "student added successfully ";
    }



    public  String getStudentName(String email) {
        Students student = studentRepository.findByEmail(email) ;
        String name=  student.getName();

        return   name;
    }

    public  String UpdateStudent(StudentMobileNoUpdateDTO students){

        // convert dtos into model of students

        // getting old values from entity bcz if we directly save this all values bcome null or empty
        Students oldstudent = studentRepository.findById(students.getId()).get();
        oldstudent.setMobileno(students.getMobileno());

        // always entity object is saved
        studentRepository.save(oldstudent);

        // convertion done and saved done
        return  "Number updated successfully";

    }

}
